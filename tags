!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/junliu\/work\/code\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/exports\/data\/opt\/cmake-3.6.1\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/junliu\/work\/code$/;"	m
CMakeFortranCompilerId	build/CMakeFiles/3.6.1/CompilerIdFortran/CMakeFortranCompilerId.F	/^      PROGRAM CMakeFortranCompilerId$/;"	p
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
Ea	bak/config.f90	/^        real(8) :: Ea,/;"	k	type:tpcon
Ea	config.f90	/^        real(8) :: Ea,/;"	k	type:tpcon
Ek	bak/config.f90	/^        real(8) :: Ea, Ek,/;"	k	type:tpcon
Ek	config.f90	/^        real(8) :: Ea, Ek,/;"	k	type:tpcon
Ev	bak/config.f90	/^        real(8) :: Ea, Ek, Ev,/;"	k	type:tpcon
Ev	config.f90	/^        real(8) :: Ea, Ek, Ev,/;"	k	type:tpcon
MB	bak/syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx, MB,/;"	v	module:mo_var
MB	syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx, MB,/;"	v	module:mo_var
MG_s	bak/syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx, MB, MG_s,/;"	v	module:mo_var
MG_s	syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx, MB, MG_s,/;"	v	module:mo_var
MG_xy	bak/syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx, MB, MG_s, MG_xy$/;"	v	module:mo_var
MG_xy	syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx, MB, MG_s, MG_xy$/;"	v	module:mo_var
Mk_x	bak/syst.f90	/^    real(8) :: Mk_x,/;"	v	module:mo_var
Mk_x	syst.f90	/^    real(8) :: Mk_x,/;"	v	module:mo_var
Mk_y	bak/syst.f90	/^    real(8) :: Mk_x, Mk_y,/;"	v	module:mo_var
Mk_y	syst.f90	/^    real(8) :: Mk_x, Mk_y,/;"	v	module:mo_var
RM	build/Makefile	/^RM = \/exports\/data\/opt\/cmake-3.6.1\/bin\/cmake -E remove -f$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
T	bak/config.f90	/^        real(8) :: T$/;"	k	type:tpcon
T	config.f90	/^        real(8) :: T$/;"	k	type:tpcon
alpha	bak/syst.f90	/^    real(8), parameter :: alpha /;"	v	module:mo_syst
alpha	syst.f90	/^    real(8), parameter :: alpha /;"	v	module:mo_syst
beta	bak/fire.f90	/^    real(8), private :: dt, dt2, dt22, beta,/;"	v	module:mo_fire
beta	fire.f90	/^    real(8), private :: dt, dt2, dt22, beta,/;"	v	module:mo_fire
beta0	bak/fire.f90	/^    real(8), private, parameter :: beta0 /;"	v	module:mo_fire
beta0	fire.f90	/^    real(8), private, parameter :: beta0 /;"	v	module:mo_fire
calc_box_length	bak/config.f90	/^    Pure function calc_box_length(/;"	f
calc_box_length	config.f90	/^    Pure function calc_box_length(/;"	f
calc_box_trianglelattice	bak/config.f90	/^    function calc_box_trianglelattice(/;"	f
calc_box_trianglelattice	config.f90	/^    function calc_box_trianglelattice(/;"	f
calc_force	bak/force.f90	/^    subroutine calc_force(/;"	s	module:mo_force
calc_force	force.f90	/^    subroutine calc_force(/;"	s	module:mo_force
calc_force_spring	bak/force.f90	/^    subroutine calc_force_spring(/;"	s
calc_force_spring	force.f90	/^    subroutine calc_force_spring(/;"	s
calc_force_withoutlist	bak/force.f90	/^    subroutine calc_force_withoutlist(/;"	s
calc_force_withoutlist	force.f90	/^    subroutine calc_force_withoutlist(/;"	s
calc_len	bak/network.f90	/^    function calc_len(/;"	f
calc_len	network.f90	/^    function calc_len(/;"	f
change_k_spring	bak/network.f90	/^    subroutine change_k_spring(/;"	s
change_k_spring	network.f90	/^    subroutine change_k_spring(/;"	s
change_k_spring_2	bak/network.f90	/^    subroutine change_k_spring_2(/;"	s
change_k_spring_2	network.f90	/^    subroutine change_k_spring_2(/;"	s
check_list	bak/list.f90	/^    function check_list(/;"	f
check_list	list.f90	/^    function check_list(/;"	f
check_system_force	bak/fire.f90	/^    subroutine check_system_force(/;"	s	module:mo_fire
check_system_force	fire.f90	/^    subroutine check_system_force(/;"	s	module:mo_fire
chtemp	bak/syst.f90	/^    character(250) :: filename, chtemp$/;"	v	module:mo_var
chtemp	syst.f90	/^    character(250) :: filename, chtemp$/;"	v	module:mo_var
con	bak/config.f90	/^    type(tpcon)/;"	v	module:mo_config
con	config.f90	/^    type(tpcon)/;"	v	module:mo_config
con0	bak/list.f90	/^        real(4)    :: con0(/;"	k	type:tplistone
con0	list.f90	/^        real(4)    :: con0(/;"	k	type:tplistone
confire	bak/fire.f90	/^    type(tpcon)  :: confire,/;"	v	module:mo_fire
confire	fire.f90	/^    type(tpcon)  :: confire,/;"	v	module:mo_fire
confire2	bak/fire.f90	/^    type(tpcon)  :: confire, confire2$/;"	v	module:mo_fire
confire2	fire.f90	/^    type(tpcon)  :: confire, confire2$/;"	v	module:mo_fire
contemp	bak/config.f90	/^    type(tpcon) :: con, contemp,/;"	v	module:mo_config
contemp	config.f90	/^    type(tpcon) :: con, contemp,/;"	v	module:mo_config
contemp2	bak/config.f90	/^    type(tpcon) :: con, contemp, contemp2$/;"	v	module:mo_config
contemp2	config.f90	/^    type(tpcon) :: con, contemp, contemp2$/;"	v	module:mo_config
cory	bak/list.f90	/^        integer(1) :: cory(/;"	k	type:tplistone
cory	bak/network.f90	/^        integer :: cory,/;"	k	type:tpspring
cory	list.f90	/^        integer(1) :: cory(/;"	k	type:tplistone
cory	network.f90	/^        integer :: cory,/;"	k	type:tpspring
count	bak/fire.f90	/^    integer, private :: count$/;"	v	module:mo_fire
count	fire.f90	/^    integer, private :: count$/;"	v	module:mo_fire
cumstep	bak/md.f90	/^    integer, private, save      :: cumstep /;"	v	module:mo_md
cumstep	md.f90	/^    integer, private, save      :: cumstep /;"	v	module:mo_md
dt	bak/fire.f90	/^    real(8), private :: dt,/;"	v	module:mo_fire
dt	bak/md.f90	/^    real(8), private, parameter :: dt /;"	v	module:mo_md
dt	fire.f90	/^    real(8), private :: dt,/;"	v	module:mo_fire
dt	md.f90	/^    real(8), private, parameter :: dt /;"	v	module:mo_md
dt0	bak/fire.f90	/^    real(8), private, parameter :: dt0 /;"	v	module:mo_fire
dt0	fire.f90	/^    real(8), private, parameter :: dt0 /;"	v	module:mo_fire
dt2	bak/fire.f90	/^    real(8), private :: dt, dt2,/;"	v	module:mo_fire
dt2	bak/md.f90	/^    real(8), private, parameter :: dt2 /;"	v	module:mo_md
dt2	fire.f90	/^    real(8), private :: dt, dt2,/;"	v	module:mo_fire
dt2	md.f90	/^    real(8), private, parameter :: dt2 /;"	v	module:mo_md
dt22	bak/fire.f90	/^    real(8), private :: dt, dt2, dt22,/;"	v	module:mo_fire
dt22	fire.f90	/^    real(8), private :: dt, dt2, dt22,/;"	v	module:mo_fire
dtmax	bak/fire.f90	/^    real(8), private, parameter :: dtmax /;"	v	module:mo_fire
dtmax	fire.f90	/^    real(8), private, parameter :: dtmax /;"	v	module:mo_fire
eof_flag	bak/syst.f90	/^    logical :: exist_flag, eof_flag$/;"	v	module:mo_var
eof_flag	syst.f90	/^    logical :: exist_flag, eof_flag$/;"	v	module:mo_var
epl_xx	bak/syst.f90	/^    real(8) :: epl_xx,/;"	v	module:mo_var
epl_xx	syst.f90	/^    real(8) :: epl_xx,/;"	v	module:mo_var
epl_yy	bak/syst.f90	/^    real(8) :: epl_xx, epl_yy$/;"	v	module:mo_var
epl_yy	syst.f90	/^    real(8) :: epl_xx, epl_yy$/;"	v	module:mo_var
eta	bak/disorder.f90	/^    real(8) :: eta,/;"	v	module:mo_disorder
eta	disorder.f90	/^    real(8) :: eta,/;"	v	module:mo_disorder
eta_spring	bak/disorder.f90	/^    real(8) :: eta, eta_spring$/;"	v	module:mo_disorder
eta_spring	disorder.f90	/^    real(8) :: eta, eta_spring$/;"	v	module:mo_disorder
exist_flag	bak/syst.f90	/^    logical :: exist_flag,/;"	v	module:mo_var
exist_flag	syst.f90	/^    logical :: exist_flag,/;"	v	module:mo_var
fa	bak/config.f90	/^        real(8), allocatable, dimension(:,:) :: fa$/;"	k	type:tpcon
fa	config.f90	/^        real(8), allocatable, dimension(:,:) :: fa$/;"	k	type:tpcon
faverage	bak/syst.f90	/^    character(250) :: faverage,/;"	v	module:mo_var
faverage	syst.f90	/^    character(250) :: faverage,/;"	v	module:mo_var
fbeta	bak/fire.f90	/^    real(8), private, parameter :: fbeta /;"	v	module:mo_fire
fbeta	fire.f90	/^    real(8), private, parameter :: fbeta /;"	v	module:mo_fire
fdec	bak/fire.f90	/^    real(8), private, parameter :: fdec /;"	v	module:mo_fire
fdec	fire.f90	/^    real(8), private, parameter :: fdec /;"	v	module:mo_fire
fdump	bak/syst.f90	/^    character(250) :: faverage, fresults, fdump,/;"	v	module:mo_var
fdump	syst.f90	/^    character(250) :: faverage, fresults, fdump,/;"	v	module:mo_var
filename	bak/syst.f90	/^    character(250) :: filename,/;"	v	module:mo_var
filename	syst.f90	/^    character(250) :: filename,/;"	v	module:mo_var
finc	bak/fire.f90	/^    real(8), private, parameter :: finc /;"	v	module:mo_fire
finc	fire.f90	/^    real(8), private, parameter :: finc /;"	v	module:mo_fire
fmax	bak/fire.f90	/^    real(8), private, parameter :: fmax /;"	v	module:mo_fire
fmax	fire.f90	/^    real(8), private, parameter :: fmax /;"	v	module:mo_fire
fn	bak/fire.f90	/^    real(8), private :: dt, dt2, dt22, beta, power, fn,/;"	v	module:mo_fire
fn	fire.f90	/^    real(8), private :: dt, dt2, dt22, beta, power, fn,/;"	v	module:mo_fire
free	bak/syst.f90	/^    integer, parameter :: free /;"	v	module:mo_syst
free	syst.f90	/^    integer, parameter :: free /;"	v	module:mo_syst
fresults	bak/syst.f90	/^    character(250) :: faverage, fresults,/;"	v	module:mo_var
fresults	syst.f90	/^    character(250) :: faverage, fresults,/;"	v	module:mo_var
ftemp	bak/syst.f90	/^    character(250) :: faverage, fresults, fdump, ftemp$/;"	v	module:mo_var
ftemp	syst.f90	/^    character(250) :: faverage, fresults, fdump, ftemp$/;"	v	module:mo_var
gen_lattice_triangle	bak/config.f90	/^    subroutine gen_lattice_triangle(/;"	s
gen_lattice_triangle	config.f90	/^    subroutine gen_lattice_triangle(/;"	s
gen_rand_config	bak/config.f90	/^    subroutine gen_rand_config(/;"	s	module:mo_config
gen_rand_config	config.f90	/^    subroutine gen_rand_config(/;"	s	module:mo_config
hdt	bak/md.f90	/^    real(8), private, parameter :: hdt /;"	v	module:mo_md
hdt	md.f90	/^    real(8), private, parameter :: hdt /;"	v	module:mo_md
hdt2	bak/md.f90	/^    real(8), private, parameter :: hdt2 /;"	v	module:mo_md
hdt2	md.f90	/^    real(8), private, parameter :: hdt2 /;"	v	module:mo_md
i	bak/network.f90	/^        in/;"	k	type:tpspring
i	bak/syst.f90	/^    in/;"	v	module:mo_var
i	network.f90	/^        in/;"	k	type:tpspring
i	syst.f90	/^    in/;"	v	module:mo_var
ii	bak/syst.f90	/^    integer :: i, j, k, ii,/;"	v	module:mo_var
ii	syst.f90	/^    integer :: i, j, k, ii,/;"	v	module:mo_var
init_confire	bak/fire.f90	/^    subroutine init_confire(/;"	s	module:mo_fire
init_confire	fire.f90	/^    subroutine init_confire(/;"	s	module:mo_fire
init_disorder	bak/disorder.f90	/^    subroutine init_disorder(/;"	s	module:mo_disorder
init_disorder	disorder.f90	/^    subroutine init_disorder(/;"	s	module:mo_disorder
init_list	bak/list.f90	/^    subroutine init_list(/;"	s	module:mo_list
init_list	list.f90	/^    subroutine init_list(/;"	s	module:mo_list
init_md	bak/md.f90	/^    subroutine init_md(/;"	s	module:mo_md
init_md	md.f90	/^    subroutine init_md(/;"	s	module:mo_md
init_network	bak/network.f90	/^    subroutine init_network(/;"	s	module:mo_network
init_network	network.f90	/^    subroutine init_network(/;"	s	module:mo_network
init_system	bak/config.f90	/^    subroutine init_system(/;"	s	module:mo_config
init_system	config.f90	/^    subroutine init_system(/;"	s	module:mo_config
iround	bak/list.f90	/^        integer(1) :: iround(/;"	k	type:tplistone
iround	bak/network.f90	/^        integer :: cory, iround(/;"	k	type:tpspring
iround	list.f90	/^        integer(1) :: iround(/;"	k	type:tplistone
iround	network.f90	/^        integer :: cory, iround(/;"	k	type:tpspring
itemp	bak/syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp,/;"	v	module:mo_var
itemp	syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp,/;"	v	module:mo_var
j	bak/network.f90	/^        integer :: i, j$/;"	k	type:tpspring
j	bak/syst.f90	/^    integer :: i, j,/;"	v	module:mo_var
j	network.f90	/^        integer :: i, j$/;"	k	type:tpspring
j	syst.f90	/^    integer :: i, j,/;"	v	module:mo_var
jj	bak/syst.f90	/^    integer :: i, j, k, ii, jj,/;"	v	module:mo_var
jj	syst.f90	/^    integer :: i, j, k, ii, jj,/;"	v	module:mo_var
k	bak/syst.f90	/^    integer :: i, j, k,/;"	v	module:mo_var
k	syst.f90	/^    integer :: i, j, k,/;"	v	module:mo_var
kk	bak/syst.f90	/^    integer :: i, j, k, ii, jj, kk,/;"	v	module:mo_var
kk	syst.f90	/^    integer :: i, j, k, ii, jj, kk,/;"	v	module:mo_var
ks	bak/network.f90	/^        real(8) :: ks$/;"	k	type:tpspring
ks	network.f90	/^        real(8) :: ks$/;"	k	type:tpspring
l0	bak/network.f90	/^        real(8) :: l0,/;"	k	type:tpspring
l0	network.f90	/^        real(8) :: l0,/;"	k	type:tpspring
la	bak/config.f90	/^        real(8) :: la(/;"	k	type:tpcon
la	config.f90	/^        real(8) :: la(/;"	k	type:tpcon
laf	bak/config.f90	/^        real(8) :: laf(/;"	k	type:tpcon
laf	config.f90	/^        real(8) :: laf(/;"	k	type:tpcon
lainv	bak/config.f90	/^        real(8) :: lainv(/;"	k	type:tpcon
lainv	config.f90	/^        real(8) :: lainv(/;"	k	type:tpcon
lav	bak/config.f90	/^        real(8) :: lav(/;"	k	type:tpcon
lav	config.f90	/^        real(8) :: lav(/;"	k	type:tpcon
list	bak/list.f90	/^        type(tplisto/;"	k	type:tplist
list	list.f90	/^        type(tplisto/;"	k	type:tplist
listmax	bak/list.f90	/^    integer, private, parameter :: listmax /;"	v	module:mo_list
listmax	list.f90	/^    integer, private, parameter :: listmax /;"	v	module:mo_list
lvec	bak/network.f90	/^        real(8) :: l0, lvec(/;"	k	type:tpspring
lvec	network.f90	/^        real(8) :: l0, lvec(/;"	k	type:tpspring
lx	bak/config.f90	/^        real(8) :: la(free), lx,/;"	k	type:tpcon
lx	config.f90	/^        real(8) :: la(free), lx,/;"	k	type:tpcon
lxf	bak/config.f90	/^        real(8) :: laf(free), lxf,/;"	k	type:tpcon
lxf	config.f90	/^        real(8) :: laf(free), lxf,/;"	k	type:tpcon
lxinv	bak/config.f90	/^        real(8) :: lainv(free), lxinv,/;"	k	type:tpcon
lxinv	config.f90	/^        real(8) :: lainv(free), lxinv,/;"	k	type:tpcon
lxv	bak/config.f90	/^        real(8) :: lav(free), lxv,/;"	k	type:tpcon
lxv	config.f90	/^        real(8) :: lav(free), lxv,/;"	k	type:tpcon
ly	bak/config.f90	/^        real(8) :: la(free), lx, ly,/;"	k	type:tpcon
ly	config.f90	/^        real(8) :: la(free), lx, ly,/;"	k	type:tpcon
lyf	bak/config.f90	/^        real(8) :: laf(free), lxf, lyf,/;"	k	type:tpcon
lyf	config.f90	/^        real(8) :: laf(free), lxf, lyf,/;"	k	type:tpcon
lyinv	bak/config.f90	/^        real(8) :: lainv(free), lxinv, lyinv,/;"	k	type:tpcon
lyinv	config.f90	/^        real(8) :: lainv(free), lxinv, lyinv,/;"	k	type:tpcon
lyv	bak/config.f90	/^        real(8) :: lav(free), lxv, lyv,/;"	k	type:tpcon
lyv	config.f90	/^        real(8) :: lav(free), lxv, lyv,/;"	k	type:tpcon
lz	bak/config.f90	/^        real(8) :: la(free), lx, ly, lz$/;"	k	type:tpcon
lz	config.f90	/^        real(8) :: la(free), lx, ly, lz$/;"	k	type:tpcon
lzf	bak/config.f90	/^        real(8) :: laf(free), lxf, lyf, lzf$/;"	k	type:tpcon
lzf	config.f90	/^        real(8) :: laf(free), lxf, lyf, lzf$/;"	k	type:tpcon
lzinv	bak/config.f90	/^        real(8) :: lainv(free), lxinv, lyinv, lzinv$/;"	k	type:tpcon
lzinv	config.f90	/^        real(8) :: lainv(free), lxinv, lyinv, lzinv$/;"	k	type:tpcon
lzv	bak/config.f90	/^        real(8) :: lav(free), lxv, lyv, lzv$/;"	k	type:tpcon
lzv	config.f90	/^        real(8) :: lav(free), lxv, lyv, lzv$/;"	k	type:tpcon
main	bak/main.f90	/^program main$/;"	p
main	main.f90	/^program main$/;"	p
make_disorder	bak/disorder.f90	/^    subroutine make_disorder(/;"	s
make_disorder	disorder.f90	/^    subroutine make_disorder(/;"	s
make_list	bak/list.f90	/^    subroutine make_list(/;"	s	module:mo_list
make_list	list.f90	/^    subroutine make_list(/;"	s	module:mo_list
make_network	bak/network.f90	/^    subroutine make_network(/;"	s
make_network	network.f90	/^    subroutine make_network(/;"	s
max_of_springs	bak/network.f90	/^        integer :: nsps, max_of_springs$/;"	k	type:tpnetwork
max_of_springs	network.f90	/^        integer :: nsps, max_of_springs$/;"	k	type:tpnetwork
md_nvt	bak/md.f90	/^    subroutine md_nvt(/;"	s	module:mo_md
md_nvt	md.f90	/^    subroutine md_nvt(/;"	s	module:mo_md
mdargs	bak/md.f90	/^    type(tpmdargs)/;"	v	module:mo_md
mdargs	md.f90	/^    type(tpmdargs)/;"	v	module:mo_md
mini_fire_cp	bak/fire.f90	/^    subroutine mini_fire_cp(/;"	s
mini_fire_cp	fire.f90	/^    subroutine mini_fire_cp(/;"	s
mini_fire_cv	bak/fire.f90	/^    subroutine mini_fire_cv(/;"	s	module:mo_fire
mini_fire_cv	fire.f90	/^    subroutine mini_fire_cv(/;"	s	module:mo_fire
mo_config	bak/config.f90	/^module mo_config$/;"	m
mo_config	config.f90	/^module mo_config$/;"	m
mo_disorder	bak/disorder.f90	/^module mo_disorder$/;"	m
mo_disorder	disorder.f90	/^module mo_disorder$/;"	m
mo_fire	bak/fire.f90	/^module mo_fire$/;"	m
mo_fire	fire.f90	/^module mo_fire$/;"	m
mo_force	bak/force.f90	/^module mo_force$/;"	m
mo_force	force.f90	/^module mo_force$/;"	m
mo_list	bak/list.f90	/^module mo_list$/;"	m
mo_list	list.f90	/^module mo_list$/;"	m
mo_md	bak/md.f90	/^module mo_md$/;"	m
mo_md	md.f90	/^module mo_md$/;"	m
mo_network	bak/network.f90	/^module mo_network$/;"	m
mo_network	network.f90	/^module mo_network$/;"	m
mo_syst	bak/syst.f90	/^module mo_syst$/;"	m
mo_syst	syst.f90	/^module mo_syst$/;"	m
mo_var	bak/syst.f90	/^module mo_var$/;"	m
mo_var	syst.f90	/^module mo_var$/;"	m
mu_xy	bak/syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy,/;"	v	module:mo_var
mu_xy	syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy,/;"	v	module:mo_var
mu_yx	bak/syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx,/;"	v	module:mo_var
mu_yx	syst.f90	/^    real(8) :: Mk_x, Mk_y, mu_xy, mu_yx,/;"	v	module:mo_var
natom	bak/config.f90	/^        integer :: natom$/;"	k	type:tpcon
natom	bak/list.f90	/^        integer                                    :: natom$/;"	k	type:tplist
natom	bak/network.f90	/^        integer :: natom$/;"	k	type:tpnetwork
natom	bak/syst.f90	/^        integer :: natom$/;"	k	type:tpset
natom	config.f90	/^        integer :: natom$/;"	k	type:tpcon
natom	list.f90	/^        integer                                    :: natom$/;"	k	type:tplist
natom	network.f90	/^        integer :: natom$/;"	k	type:tpnetwork
natom	syst.f90	/^        integer :: natom$/;"	k	type:tpset
nb	bak/list.f90	/^    type(tplist) :: nb$/;"	v	module:mo_list
nb	list.f90	/^    type(tplist) :: nb$/;"	v	module:mo_list
nbfire	bak/fire.f90	/^    type(tplist) :: nbfire$/;"	v	module:mo_fire
nbfire	fire.f90	/^    type(tplist) :: nbfire$/;"	v	module:mo_fire
nbi	bak/list.f90	/^        integer, allocatable, dimension(:)         :: nbi$/;"	k	type:tplist
nbi	list.f90	/^        integer, allocatable, dimension(:)         :: nbi$/;"	k	type:tplist
nblist	bak/list.f90	/^        integer    :: nblist(/;"	k	type:tplistone
nblist	list.f90	/^        integer    :: nblist(/;"	k	type:tplistone
nbsum	bak/list.f90	/^        integer    :: nbsum$/;"	k	type:tplistone
nbsum	list.f90	/^        integer    :: nbsum$/;"	k	type:tplistone
net	bak/network.f90	/^    type(tpnetw/;"	v	module:mo_network
net	network.f90	/^    type(tpnetw/;"	v	module:mo_network
nlcut	bak/list.f90	/^    real(8), private, parameter :: nlcut /;"	v	module:mo_list
nlcut	list.f90	/^    real(8), private, parameter :: nlcut /;"	v	module:mo_list
nmin	bak/fire.f90	/^    integer, private, parameter :: nmin /;"	v	module:mo_fire
nmin	fire.f90	/^    integer, private, parameter :: nmin /;"	v	module:mo_fire
np	bak/syst.f90	/^        integer :: np$/;"	k	type:tpset
np	syst.f90	/^        integer :: np$/;"	k	type:tpset
nscale	bak/md.f90	/^    integer, private, parameter :: nscale /;"	v	module:mo_md
nscale	md.f90	/^    integer, private, parameter :: nscale /;"	v	module:mo_md
nsps	bak/network.f90	/^        integer :: nsps,/;"	k	type:tpnetwork
nsps	network.f90	/^        integer :: nsps,/;"	k	type:tpnetwork
nstep	bak/syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step, step1, step2, nstep$/;"	v	module:mo_var
nstep	syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step, step1, step2, nstep$/;"	v	module:mo_var
phi	bak/config.f90	/^        real(8) :: phi$/;"	k	type:tpcon
phi	bak/syst.f90	/^        real(8) :: phi$/;"	k	type:tpset
phi	config.f90	/^        real(8) :: phi$/;"	k	type:tpcon
phi	syst.f90	/^        real(8) :: phi$/;"	k	type:tpset
pi	bak/syst.f90	/^    real(8), parameter :: pi /;"	v	module:mo_syst
pi	syst.f90	/^    real(8), parameter :: pi /;"	v	module:mo_syst
power	bak/fire.f90	/^    real(8), private :: dt, dt2, dt22, beta, power,/;"	v	module:mo_fire
power	fire.f90	/^    real(8), private :: dt, dt2, dt22, beta, power,/;"	v	module:mo_fire
press	bak/config.f90	/^        real(8) :: Ea, Ek, Ev, stress, press,/;"	k	type:tpcon
press	bak/md.f90	/^        real(8) :: press$/;"	k	type:tpmdargs
press	config.f90	/^        real(8) :: Ea, Ek, Ev, stress, press,/;"	k	type:tpcon
press	md.f90	/^        real(8) :: press$/;"	k	type:tpmdargs
pressx	bak/config.f90	/^        real(8) :: Ea, Ek, Ev, stress, press, pressx,/;"	k	type:tpcon
pressx	config.f90	/^        real(8) :: Ea, Ek, Ev, stress, press, pressx,/;"	k	type:tpcon
pressy	bak/config.f90	/^        real(8) :: Ea, Ek, Ev, stress, press, pressx, pressy$/;"	k	type:tpcon
pressy	config.f90	/^        real(8) :: Ea, Ek, Ev, stress, press, pressx, pressy$/;"	k	type:tpcon
r	bak/config.f90	/^        re/;"	k	type:tpcon
r	config.f90	/^        re/;"	k	type:tpcon
ra	bak/config.f90	/^        real(8), allocatable, dimension(:,:) :: ra$/;"	k	type:tpcon
ra	config.f90	/^        real(8), allocatable, dimension(:,:) :: ra$/;"	k	type:tpcon
radisorder	bak/disorder.f90	/^    real(8), allocatable, dimension(:,:) :: radisorder$/;"	v	module:mo_disorder
radisorder	disorder.f90	/^    real(8), allocatable, dimension(:,:) :: radisorder$/;"	v	module:mo_disorder
ratio	bak/syst.f90	/^    real(8), parameter :: ratio /;"	v	module:mo_syst
ratio	syst.f90	/^    real(8), parameter :: ratio /;"	v	module:mo_syst
rattlerflag	bak/list.f90	/^        integer, allocatable, dimension(:)         :: rattlerflag$/;"	k	type:tplist
rattlerflag	list.f90	/^        integer, allocatable, dimension(:)         :: rattlerflag$/;"	k	type:tplist
read_config	bak/config.f90	/^    subroutine read_config(/;"	s
read_config	config.f90	/^    subroutine read_config(/;"	s
save_config_copy	bak/config.f90	/^    subroutine save_config_copy(/;"	s
save_config_copy	config.f90	/^    subroutine save_config_copy(/;"	s
save_config_to	bak/config.f90	/^    subroutine save_config_to(/;"	s
save_config_to	config.f90	/^    subroutine save_config_to(/;"	s
scale_temp	bak/md.f90	/^    subroutine scale_temp(/;"	s
scale_temp	md.f90	/^    subroutine scale_temp(/;"	s
sets	bak/syst.f90	/^    type(tpset) :: sets$/;"	v	module:mo_syst
sets	syst.f90	/^    type(tpset) :: sets$/;"	v	module:mo_syst
sps	bak/network.f90	/^        type(tpspring), allocatable, dimension(:) :: sps$/;"	k	type:tpnetwork
sps	network.f90	/^        type(tpspring), allocatable, dimension(:) :: sps$/;"	k	type:tpnetwork
step	bak/fire.f90	/^    integer, private :: step$/;"	v	module:mo_fire
step	bak/syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step,/;"	v	module:mo_var
step	fire.f90	/^    integer, private :: step$/;"	v	module:mo_fire
step	syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step,/;"	v	module:mo_var
step1	bak/syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step, step1,/;"	v	module:mo_var
step1	syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step, step1,/;"	v	module:mo_var
step2	bak/syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step, step1, step2,/;"	v	module:mo_var
step2	syst.f90	/^    integer :: i, j, k, ii, jj, kk, itemp, step, step1, step2,/;"	v	module:mo_var
stepmax	bak/fire.f90	/^    integer, private, parameter :: stepmax /;"	v	module:mo_fire
stepmax	fire.f90	/^    integer, private, parameter :: stepmax /;"	v	module:mo_fire
strain	bak/config.f90	/^        real(8) :: strain$/;"	k	type:tpcon
strain	config.f90	/^        real(8) :: strain$/;"	k	type:tpcon
strainf	bak/config.f90	/^        real(8) :: strainv, strainf$/;"	k	type:tpcon
strainf	config.f90	/^        real(8) :: strainv, strainf$/;"	k	type:tpcon
strainv	bak/config.f90	/^        real(8) :: strainv,/;"	k	type:tpcon
strainv	config.f90	/^        real(8) :: strainv,/;"	k	type:tpcon
stress	bak/config.f90	/^        real(8) :: Ea, Ek, Ev, stress,/;"	k	type:tpcon
stress	config.f90	/^        real(8) :: Ea, Ek, Ev, stress,/;"	k	type:tpcon
temp1	bak/syst.f90	/^    real(8) :: temp1,/;"	v	module:mo_var
temp1	syst.f90	/^    real(8) :: temp1,/;"	v	module:mo_var
temp2	bak/syst.f90	/^    real(8) :: temp1, temp2,/;"	v	module:mo_var
temp2	syst.f90	/^    real(8) :: temp1, temp2,/;"	v	module:mo_var
temp3	bak/syst.f90	/^    real(8) :: temp1, temp2, temp3$/;"	v	module:mo_var
temp3	syst.f90	/^    real(8) :: temp1, temp2, temp3$/;"	v	module:mo_var
temper	bak/md.f90	/^        real(8) :: temper$/;"	k	type:tpmdargs
temper	md.f90	/^        real(8) :: temper$/;"	k	type:tpmdargs
testp	bak/syst.f90	/^    real(8) :: testp$/;"	v	module:mo_var
testp	syst.f90	/^    real(8) :: testp$/;"	v	module:mo_var
testvar	bak/main.f90	/^    subroutine testvar$/;"	s
testvar	main.f90	/^    subroutine testvar$/;"	s
tpcon	bak/config.f90	/^    type tpcon$/;"	t	module:mo_config
tpcon	config.f90	/^    type tpcon$/;"	t	module:mo_config
tplist	bak/list.f90	/^    type tplist$/;"	t	module:mo_list
tplist	list.f90	/^    type tplist$/;"	t	module:mo_list
tplistone	bak/list.f90	/^    type tplistone$/;"	t	module:mo_list
tplistone	list.f90	/^    type tplistone$/;"	t	module:mo_list
tpmdargs	bak/md.f90	/^    type tpmdargs$/;"	t	module:mo_md
tpmdargs	md.f90	/^    type tpmdargs$/;"	t	module:mo_md
tpnetwork	bak/network.f90	/^    type tpnetwork$/;"	t	module:mo_network
tpnetwork	network.f90	/^    type tpnetwork$/;"	t	module:mo_network
tpset	bak/syst.f90	/^    type tpset$/;"	t	module:mo_syst
tpset	syst.f90	/^    type tpset$/;"	t	module:mo_syst
tpspring	bak/network.f90	/^    type tpspring$/;"	t	module:mo_network
tpspring	network.f90	/^    type tpspring$/;"	t	module:mo_network
trim_config	bak/config.f90	/^    subroutine trim_config(/;"	s
trim_config	config.f90	/^    subroutine trim_config(/;"	s
va	bak/config.f90	/^        real(8), allocatable, dimension(:,:) :: va$/;"	k	type:tpcon
va	config.f90	/^        real(8), allocatable, dimension(:,:) :: va$/;"	k	type:tpcon
vn	bak/fire.f90	/^    real(8), private :: dt, dt2, dt22, beta, power, fn, vn$/;"	v	module:mo_fire
vn	fire.f90	/^    real(8), private :: dt, dt2, dt22, beta, power, fn, vn$/;"	v	module:mo_fire
